# QA Test Automation Pipeline for Adobe

trigger:
 branches:
  include:
    - develop
 paths:
  exclude:
    - .azure-pipelines/*
    - readme.md

pool:
  vmImage: 'ubuntu-latest'

# This script was intended to build Adobe separately from Sap
# however, the current solution builds one project and produces all the artifacts
# we need to revisit this to support ad-hoc build/tests. 
# I'm commenting out the current build architecture and providing a basic compilation and publish


# TODO: Fix the old template when the solution is broken down into separate code folders
# invoke the shared template
#extends:
#  template: pipeline-template.yml
#  parameters:
#    rootFolder: .
#    testMatrix:
#        - name: temp
#          folderTemplate: '{0}'
    
# temporary basic compilation and publish
steps:
# build 
- task: Maven@3
  displayName: Maven build task
  inputs:
    mavenPomFile: ./pom.xml
    mavenOptions: '-Xmx3072m'
    javaHomeOption: 'JDKVersion'
    jdkVersionOption: '1.8'
    jdkArchitectureOption: 'x64'
    goals: 'package'
    options: '-DoutputDirectory=$(Build.StagingDirectory)'
    
# move files to appropriate subfolders
- task: CopyFiles@2
  inputs:
    SourceFolder: '$(Build.StagingDirectory)'
    TargetFolder: '$(Build.StagingDirectory)\Adobe'
    Contents: 'Adobe**.jar'
 
- task: CopyFiles@2
  inputs:
    SourceFolder: $(Build.StagingDirectory)
    TargetFolder: $(Build.StagingDirectory)\Sap
    Contents: 'Sap**.jar'
  
- task: PublishPipelineArtifact@1
  displayName: Publish Adobe artifact
  inputs:
    targetPath: '$(Build.StagingDirectory)\Adobe' 
    artifactName: 'Adobe'
    
- task: PublishPipelineArtifact@1
  displayName: Publish Sap artifact
  inputs:
    targetPath: '$(Build.StagingDirectory)\Sap' 
    artifactName: 'Sap'